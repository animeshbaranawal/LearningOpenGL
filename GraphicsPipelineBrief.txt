Graphics Pipeline
-----------------

1. Vertex Shader - transform 3D coordinates into different 3D coordinates	
				   (based on camera!?)
2. Primitive assembly - forming primitive shapes from vertex data of vertex shader
				   (like using GL_LINES, GL_TRIANGLES etc.)
3. Geometry shader - forming new shapes out of primitive shapes	
					 (what is the purpose!?)
4. Rasterization - Converting 3D coordinates to 2D screen positions and finally
				   resulting in what pixels on the screen to use.
5. Fragment Shader - Assigning colors to the pixels selected by rasterization
6. Alpha Tests and Blending - Correcting the output for depth perception and applying
							  opacity values to the colors.
							  
Buffers and Bindings
--------------------

1. First, we create a buffer with a given unique id using gl_genBuffers
2. Second, we bind the created to a buffer to a particular type using gl_BindBuffers
3. Third, we fill the buffer by copying the user data using glBufferData

NOTE: GL_STATIC_DRAW vs GL_DYNAMIC_DRAW vs GL_STREAM_DRAW

Texture Wrapping and other details
----------------------------------

On assigning a texture coordinate outside the (0,0) to (1,1) space,
openGL does texture repetition as per user assigned inputs.

Texture units are interesting as in they allow multiple textures in our fragment shader.
We first activate a texture unit and bind the texture.
We then assign the uniform variable of the texture sampler with the 
corresponding texture unit number.

Coordinate Systems
------------------
1. Local space  |
2. World Space  | - Model Matrix
3. Eye Space    | - View Matrix
4. Clip Space   | - Projection Matrix -------------
5. Screen space | - glViewport                   ||
                                                 ||
												 \/
			-----------------------------------------------------------------------------------								
            |                                                                                 |
           \ /                                                                               \ /
			|                                                                                 |
Orthographic Projection                                                             Perspective Projection  
Frustum is a cube.  Takes 6                                                    Frustum is a part of a pyramid. Takes 5
inputs- left, right, up, down,                                                 inputs - angle of perspective, ratio of width-height,
near plane and far plane.                                                      near plane and far plane.